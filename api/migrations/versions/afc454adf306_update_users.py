"""update_users

Revision ID: afc454adf306
Revises: 550fdfa00ae9
Create Date: 2025-03-09 14:05:57.938956
"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'afc454adf306'
down_revision: Union[str, None] = '550fdfa00ae9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    engine = op.get_bind().engine
    # ### commands auto generated by Alembic - please adjust! ###
    if engine.name == 'sqlite':
        # Caso seja SQLite, faremos uma abordagem manual
        # 1. Adiciona uma nova coluna com o tipo desejado
        op.add_column(
            'users',
            sa.Column('new_password', sa.String(length=250), nullable=False),
        )
        # 2. Copiar os dados da coluna antiga para a nova
        op.execute('UPDATE users SET new_password = password')
        # 3. Remover a coluna antiga
        op.drop_column('users', 'password')
        # 4. Renomear a nova coluna para o nome original
        op.alter_column('users', 'new_password', new_column_name='password')
    else:
        op.alter_column(
            'users',
            'password',
            existing_type=sa.VARCHAR(length=50),
            type_=sa.String(length=250),
            existing_nullable=False,
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    engine = op.get_bind().engine
    # ### commands auto generated by Alembic - please adjust! ###
    if engine.name == 'sqlite':
        # Caso seja SQLite, reverta de forma semelhante
        op.add_column(
            'users',
            sa.Column('new_password', sa.String(length=50), nullable=False),
        )
        op.execute('UPDATE users SET new_password = password')
        op.drop_column('users', 'password')
        op.alter_column('users', 'new_password', new_column_name='password')
    else:
        op.alter_column(
            'users',
            'password',
            existing_type=sa.String(length=250),
            type_=sa.VARCHAR(length=50),
            existing_nullable=False,
        )
    # ### end Alembic commands ###
